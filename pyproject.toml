[project]
name = "bkmr"
version = "3.0.0"
description = "Super fast bookmark manager with semantic full text search'"
authors = [
    {name = "sysid", email = "sysid@gmx.de"},
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
]
dependencies = []
license = {text = "BSD-3-Clause"}

[build-system]
requires = ["maturin>=1,<2"]
build-backend = "maturin"

[tool.uv]
managed = true
dev-dependencies = [
    "pip>=24.2",
    "pytest>=8.3.2",
    "pytest-mock>=3.14.0",
    "ruff>=0.6.1",
    "isort>=5.13.2",
    "mypy>=1.11.1",
]

[tool.maturin]
bindings = "bin"
strip = true
cargo-manifest-path = "bkmr/Cargo.toml"
scripts = { bkmr = "bkmr" }

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["py"]

[tool.bumpversion]
current_version = "3.0.0"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
#search = "{current_version}"
#replace = "{new_version}"
search = "version = \"{current_version}\""  # Updated to match the full line precisely
replace = "version = \"{new_version}\""  # Matches the format of the search pattern
regex = true
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = true
message = "Bump version: {current_version} → {new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "VERSION"
search = "{current_version}"
replace = "{new_version}"
regex = false

[[tool.bumpversion.files]]
filename = "pyproject.toml"

[[tool.bumpversion.files]]
filename = "bkmr/Cargo.toml"
