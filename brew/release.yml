name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-upload:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            artifact_name: bkmr
            asset_name: bkmr-linux-amd64
          - os: macos-latest
            artifact_name: bkmr
            asset_name: bkmr-macos-amd64
          - os: windows-latest
            artifact_name: bkmr.exe
            asset_name: bkmr-windows-amd64.exe

    steps:
      - uses: actions/checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Generate Completions
        if: runner.os != 'Windows'
        run: |
          mkdir -p completions
          cargo run -- completion bash > completions/bkmr.bash
          cargo run -- completion zsh > completions/bkmr.zsh
          cargo run -- completion fish > completions/bkmr.fish

      - name: Package (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          mkdir -p package/bin package/completions
          cp target/release/bkmr package/bin/
          cp completions/* package/completions/ || true
          cd package
          tar -czf ../${{ matrix.asset_name }}.tar.gz .

      - name: Package (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir -p package/bin
          cp target/release/bkmr.exe package/bin/
          cd package
          7z a -tzip ../${{ matrix.asset_name }}.zip .

      - name: Upload Release Asset (Linux/macOS)
        if: runner.os != 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.tar.gz
          asset_name: ${{ matrix.asset_name }}.tar.gz
          asset_content_type: application/gzip

      - name: Upload Release Asset (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}.zip
          asset_name: ${{ matrix.asset_name }}.zip
          asset_content_type: application/zip