# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github --platform macos --platform linux
#
name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #        target: [ x86_64, x86, aarch64, armv7, s390x, ppc64le ]
        target: [ x86_64 ]
    steps:
      - uses: actions/checkout@v4

      - name: Display directory tree (3 levels)
        run: |
          pwd
          tree -L 3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Display Python version
        run: |
          type python

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            pkg-config \
            openssl \
            libssl-dev \
            libudev-dev \
            cmake \
            libffi-dev

      - name: Verify OpenSSL installation
        run: |
          openssl version
          pkg-config --modversion openssl
          ls -l /usr/lib/x86_64-linux-gnu/pkgconfig/openssl.pc
          export PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig

      - name: Check pkg-config paths
        run: |
          echo "PKG_CONFIG_PATH is set to: $PKG_CONFIG_PATH"
          pkg-config --cflags --libs openssl
          echo "Content of /usr/lib/x86_64-linux-gnu/pkgconfig/openssl.pc:"
          cat /usr/lib/x86_64-linux-gnu/pkgconfig/openssl.pc

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -i python3.10
          sccache: 'true'
          manylinux: auto
          working-directory: bkmr
          rust-toolchain: stable

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  #  macos:
  #    runs-on: macos-latest
  #    strategy:
  #      matrix:
  #        #target: [ x86_64, aarch64 ]
  #        target: [ aarch64 ]
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Build wheels
  #        uses: PyO3/maturin-action@v1
  #        with:
  #          target: ${{ matrix.target }}
  #          args: --release --out dist
  #          sccache: 'true'
  #      - name: Upload wheels
  #        uses: actions/upload-artifact@v3
  #        with:
  #          name: wheels
  #          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    #    needs: [ linux, macos ]
    needs: [ linux ]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels

      - name: Display structure of downloaded files
        run: ls -R ./target/wheels

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing *
